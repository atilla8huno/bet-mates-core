name: Gradle Build

on:
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "main" ]

permissions:
  actions: write
  checks: read
  contents: read
  deployments: write
  id-token: write
  issues: read
  discussions: read
  packages: write
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: write
  statuses: write

env:
  IMAGE_NAME: bet-mates-core

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build --no-daemon

    - uses: actions/upload-artifact@v3
      with:
        name: bet-mates-core.jar
        path: ./build/libs/bet-mates-core-0.0.1-SNAPSHOT-standalone.jar

  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry (1)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Login to GitHub Container Registry (2)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          ([ "$VERSION" == "master" ] || [ "$VERSION" == "main" ]) && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
